{"name":"Final-project","tagline":"Final Project for Computational Graphics course","body":"## Final Project for Computational Graphics course\r\n\r\n* **AUTHOR**: Fabio Cumbo\r\n* **STUDENT-ID**: 417521\r\n* **COURSE**: Computational Graphics\r\n* **PROFESSOR**: Alberto Paoluzzi\r\n* **ACADEMIC-YEAR**: 2012-2013\r\n\r\nThis page describes the content of the final project for the course of computational graphics of Professor Paoluzzi of the Roma Tre University. This work contains the following contents:\r\n\r\n* **[sierpinski.js](https://github.com/fabio-cumbo/final-project/blob/master/sierpinski.js)** : containing functions to create Sierpinski triangles (2D) and tetrahedra (3D)\r\n* **[fractalBox.js](https://github.com/fabio-cumbo/final-project/blob/master/fractalBox.js)** : containing functions to create fractal boxes (in 2D and 3D)\r\n* **[sierpinski-examples.js](https://github.com/fabio-cumbo/final-project/blob/master/sierpinski-examples.js)** : containing example codes for sierpinski.js\r\n* **[fractalBox-examples.js](https://github.com/fabio-cumbo/final-project/blob/master/fractalBox-examples.js)** : containing example codes for fractalBox.js\r\n\r\n### Sierpinski triangles and tetrahedra:\r\nOne of the most famous and simple fractals is the Sierpinski triangle (or Sierpinski Gerla), named after the mathematician who first studied its properties. There are several ways to accomplish this fractal.\r\nIn this work was applied the cluster method.\r\n\r\n### Cluster Method:\r\nThe Sierpinski triangle is a fractal cluster, that is obtained from a two-dimensional figure and removing certain portions. Specifically, it starts from an equilateral triangle (called axiom), and a further figure said generator:\r\n\r\n![Sierpinski Triangle Generator](https://raw.github.com/fabio-cumbo/final-project/master/img/generator.png)\r\n\r\nAt the first step, the original triangle is divided into four triangles of smaller size, among which the central element is removed (the one whose sides are segments jointing the midpoints of the sides of the previous triangle). The procedure is then iteratively repeated over each triangle, until you get the final result. Magnifying only one of the triangles that make up the figure you can see that it is exactly equal to the whole figure. Independently to the depth at which you look at it, the portion of the triangle of level _n_ of the iteration process will give exactly, when scaled by a factor of _2^n_, a copy of the entire triangle.\r\n\r\n![Sierpinski Triangle](https://raw.github.com/fabio-cumbo/final-project/master/img/sierpinski2d.gif)\r\n\r\nIn this project, was created a 3D version of the Gerla, a Sierpinski tetrahedron:\r\nThe Sierpinski pyramid is the 3D version of a fractal cluster, and follows the same rules of the triangle, with the difference that the \"basic block\" is formed by a triangular-based pyramid instead of a triangle. At each iteration, the pyramids are replaced by a suitably scaled version of the generator.\r\n\r\n![Sierpinski Tetrahedron](https://raw.github.com/fabio-cumbo/final-project/master/img/sierpinski3d.gif)\r\n\r\n### Fractal Box:\r\nAnother fractal, very similar in construction to the Sierpinski triangle, is the so-called fractal box.\r\nThe fractal is generated by five geometric transformations. Each of them is a homothety with reason equal to 1/3 and composed with an appropriate translation.\r\n\r\n![Fractal Box 2D](https://raw.github.com/fabio-cumbo/final-project/master/img/fractalbox2d.gif)\r\n\r\nThe fractal is built inside a square and on each of the four sides leads to a copy of the \"Cantor Set\".\r\nIn this project has been implemented a three-dimensional version of the fractal box based on the same principles of two-dimensional version described above.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}